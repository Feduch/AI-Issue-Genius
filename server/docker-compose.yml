services:
  ai-issue-genius-server:
    build: .
    container_name: ai-issue-genius-server
    volumes:
      - .:/app
    working_dir: /app
    environment:
      DATABASE_URL: postgresql://ai_issue_genius:ai_issue_genius@ai-issue-genius-db/ai_issue_genius
    ports:
      - "9000"
    depends_on:
      - ai-issue-genius-db
    networks:
      - apps_monitoring_net
    # Добавляем healthcheck для сервера
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/api/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "100m"

  ai-issue-genius-db:
    image: "postgres:17.4-bookworm"
    container_name: ai-issue-genius-db
    volumes:
      - /data/ai-issue-genius-db:/var/lib/postgresql/data
      - ./prepare_database_db.sql:/docker-entrypoint-initdb.d/prepare_database.sql
    ports:
      - "5432"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    command: >
      postgres 
      -c log_statement=ddl 
      -c log_duration=on 
      -c log_min_duration_statement=1000
      -c log_connections=on 
      -c log_disconnections=on
    networks:
      - apps_monitoring_net
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres" ]
      interval: 60s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "100m"

networks:
  apps_monitoring_net:
    external: true